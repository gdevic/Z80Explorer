#include "ClassNetlist.h"
#include <QDebug>
#include <QFile>

ClassNetlist::ClassNetlist()
{    
}

ClassNetlist::~ClassNetlist()
{
    if (!m_resDir.isEmpty())
        saveNetNames(m_resDir + "/netnames.js");
}

bool ClassNetlist::loadResources(QString dir)
{
    qInfo() << "Loading netlist resources from " << dir;

    if (loadNetNames(dir + "/nodenames.js", false))
    {
        m_resDir = dir;

        // Load (optional) custom net names file
        loadNetNames(dir + "/netnames.js", true);

        qInfo() << "Completed loading netlist resources";
        return true;
    }
    else
        qWarning() << "Loading netlist resource failed";
    return false;
}

/*
 * Saves custom net names (all new names and overrides of the names defined in nodenames.js file)
 */
bool ClassNetlist::saveNetNames(QString fileName)
{
    //qInfo() << "Saving net names " << fileName; // XXX We are calling from a destructor, can't use this
    QFile file(fileName);
    if (file.open(QFile::WriteOnly | QFile::Text))
    {
        QTextStream out(&file);
        out << "// This file contains custom net names and overrides of the names defined in nodenames.js\n";
        out << "var nodenames_override ={\n";
        for (int i=0; i<MAX_NET; i++)
        {
            if (m_netoverrides[i])
                out << m_netnames[i] << ": " << QString::number(i) << ",\n";
        }
        out << "}\n";
        file.close();
        return true;
    }
    return false;
}

/*
 * Load Java-style net names files:
 * 1. nodenames.js : generated by Z80Simulator and it has some duplicate node names aliased to the same net number
 *                   in which case we keep only the last name found.
 * 2. netnames.js : this is our custom set of net names, it overrides nodenames.js
 */
bool ClassNetlist::loadNetNames(QString fileName, bool loadCustom)
{
    qInfo() << "Loading " << fileName;
    QFile file(fileName);
    if (file.open(QFile::ReadOnly | QFile::Text))
    {
        QTextStream in(&file);
        QString line;
        QStringList list;
        while(!in.atEnd())
        {
            line = in.readLine();
            if (!line.startsWith('/') && line.indexOf(':') != -1)
            {
                line.chop(1);
                list = line.split(':');
                if (list.length()==2)
                {
                    QString name = list[0];
                    net_t n = list[1].toInt();
                    // We are loading 2 different files: nodenames.js and custom netnames.js with updates and overrides
                    if (loadCustom)
                    {
                        // Custom file overrides previously loaded names
                        m_netnames[n] = name;
                        m_netoverrides[n] = true;
                        m_netnums[name] = n;
                    }
                    else // Load base nodename.js
                    {
                        // Each net number can have only 1 name, in the case of a duplicate, store the last name
                        if (!m_netnames[n].isEmpty())
                            qWarning() << "Duplicate name " << name << " for net " << n << ", was " << m_netnames[n];
                        m_netnames[n] = name;

                        // Each net number can be mapped to only one name
                        if (m_netnums.contains(name))
                            qWarning() << "Duplicate mapping of net " << n << " to " << name << ", was " << m_netnums[name];
                        else
                            m_netnums[name] = n;
                    }
                }
                else
                    qWarning() << "Invalid line " << list;
            }
            else
                qDebug() << "Skipping " << line;
        }
        file.close();
        return true;
    }
    else
        qWarning() << "Error opening " << fileName;
    return false;
}
