#include "ClassNetlist.h"
#include <QDebug>
#include <QFile>

ClassNetlist::ClassNetlist()
{    
}

bool ClassNetlist::loadResources(QString dir)
{
    qInfo() << "Loading netlist resources from " << dir;
    if (loadNetNames(dir + "/nodenames.js"))
    {
        // Load (optional) custom net names file
        loadNetNames(dir + "/netnames.js");

        qInfo() << "Completed loading netlist resources";
        return true;
    }
    else
        qWarning() << "Loading netlist resource failed";
    return false;
}

/*
 * Load Java-style net names files:
 * 1. nodenames.js : generated by Z80Simulator and it has some duplicate node names aliased to the same net number
 *                   in which case we keep only the last name found.
 * 2. netnames.js : this is our custom set of net names, it overrides nodenames.js
 */
bool ClassNetlist::loadNetNames(QString fileName)
{
    qInfo() << "Loading " << fileName;
    QFile file(fileName);
    if (file.open(QFile::ReadOnly | QFile::Text))
    {
        QTextStream in(&file);
        QString line;
        QStringList list;
        while(!in.atEnd())
        {
            line = in.readLine();
            if (!line.startsWith('/') && line.indexOf(':') != -1)
            {
                line.chop(1);
                list = line.split(':');
                if (list.length()==2)
                {
                    QString name = list[0];
                    net_t n = list[1].toInt();

                    if (!m_netnames[n].isEmpty())
                        qWarning() << "Aliased net name " << name << "to net" << n;
                    m_netnames[n] = name;

                    if (!m_netnums.contains(name))
                        m_netnums[name] = n;
                    else
                        qWarning() << "Duplicate net name " << name;
                }
                else
                    qWarning() << "Invalid line " << list;
            }
            else
                qDebug() << "Skipping " << line;
        }
        file.close();
        return true;
    }
    else
        qWarning() << "Error opening " << fileName;
    return false;
}
